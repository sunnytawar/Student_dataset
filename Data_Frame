#!/usr/bin/env python
# coding: utf-8

# # TASK 2: To explore Supervised Machine Learning

# In[6]:


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt  
get_ipython().run_line_magic('matplotlib', 'inline')
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error
import seaborn as sb


# In[7]:


dataset = pd.read_csv('C:\\Users\\hp\\Desktop\\sunny.csv') 
dataset.shape
dataset.head()
dataset.describe() 


# In[8]:


dataset.plot(x='Hours', y='Scores', style='o ')
plt.title('Hours vs Percentage')
plt.xlabel('Hours Studied')
plt.ylabel('Percentage Score')
plt.show()


# In[9]:


X = dataset.iloc[:, :-1].values  
y = dataset.iloc[:, 1].values  


# In[10]:


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state=0) 


# In[17]:


model = LinearRegression()
model.fit(X_train, y_train)  
plt.scatter(X_train,y_train,color='green')
plt.plot(X_train,model.predict(X_train),color='blue')
plt.title('Hours vs Scores')
plt.xlabel('Hours')
plt.ylabel('Percentage')
plt.show()


# In[12]:


print(model.intercept_) 
print(model.coef_)  


# In[13]:


y_pred = model.predict(X_test)


df=pd.DataFrame({'Actual':y_test, 'Predicted':y_pred})  
df 


# In[14]:


meanAbsoluteError = mean_absolute_error(y_test, y_pred)
meanSquaredError = mean_squared_error(y_test, y_pred)
rootMeanSquaredError = np.sqrt(meanSquaredError)
print('Mean Absolute Error:', meanAbsoluteError)  
print('Mean Squared Error:', meanSquaredError)  
print('Root Mean Squared Error:', rootMeanSquaredError)


# In[ ]:





# In[ ]:





# In[ ]:




